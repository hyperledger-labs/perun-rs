// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: perun-remote.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	protobuf "perun.network/go-perun/wire/protobuf"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//	*Message_FundingRequest
	//	*Message_FundingResponse
	//	*Message_WatchRequest
	//	*Message_WatchUpdate
	//	*Message_WatchResponse
	//	*Message_ForceCloseRequest
	//	*Message_ForceCloseResponse
	//	*Message_DisputeNotification
	Msg isMessage_Msg `protobuf_oneof:"msg"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_perun_remote_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_perun_remote_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_perun_remote_proto_rawDescGZIP(), []int{0}
}

func (m *Message) GetMsg() isMessage_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *Message) GetFundingRequest() *FundingRequestMsg {
	if x, ok := x.GetMsg().(*Message_FundingRequest); ok {
		return x.FundingRequest
	}
	return nil
}

func (x *Message) GetFundingResponse() *FundingResponseMsg {
	if x, ok := x.GetMsg().(*Message_FundingResponse); ok {
		return x.FundingResponse
	}
	return nil
}

func (x *Message) GetWatchRequest() *WatchRequestMsg {
	if x, ok := x.GetMsg().(*Message_WatchRequest); ok {
		return x.WatchRequest
	}
	return nil
}

func (x *Message) GetWatchUpdate() *WatchUpdateMsg {
	if x, ok := x.GetMsg().(*Message_WatchUpdate); ok {
		return x.WatchUpdate
	}
	return nil
}

func (x *Message) GetWatchResponse() *WatchResponseMsg {
	if x, ok := x.GetMsg().(*Message_WatchResponse); ok {
		return x.WatchResponse
	}
	return nil
}

func (x *Message) GetForceCloseRequest() *ForceCloseRequestMsg {
	if x, ok := x.GetMsg().(*Message_ForceCloseRequest); ok {
		return x.ForceCloseRequest
	}
	return nil
}

func (x *Message) GetForceCloseResponse() *ForceCloseResponseMsg {
	if x, ok := x.GetMsg().(*Message_ForceCloseResponse); ok {
		return x.ForceCloseResponse
	}
	return nil
}

func (x *Message) GetDisputeNotification() *DisputeNotification {
	if x, ok := x.GetMsg().(*Message_DisputeNotification); ok {
		return x.DisputeNotification
	}
	return nil
}

type isMessage_Msg interface {
	isMessage_Msg()
}

type Message_FundingRequest struct {
	FundingRequest *FundingRequestMsg `protobuf:"bytes,1,opt,name=funding_request,json=fundingRequest,proto3,oneof"`
}

type Message_FundingResponse struct {
	FundingResponse *FundingResponseMsg `protobuf:"bytes,2,opt,name=funding_response,json=fundingResponse,proto3,oneof"`
}

type Message_WatchRequest struct {
	WatchRequest *WatchRequestMsg `protobuf:"bytes,3,opt,name=watch_request,json=watchRequest,proto3,oneof"`
}

type Message_WatchUpdate struct {
	WatchUpdate *WatchUpdateMsg `protobuf:"bytes,4,opt,name=watch_update,json=watchUpdate,proto3,oneof"`
}

type Message_WatchResponse struct {
	WatchResponse *WatchResponseMsg `protobuf:"bytes,5,opt,name=watch_response,json=watchResponse,proto3,oneof"`
}

type Message_ForceCloseRequest struct {
	ForceCloseRequest *ForceCloseRequestMsg `protobuf:"bytes,6,opt,name=force_close_request,json=forceCloseRequest,proto3,oneof"`
}

type Message_ForceCloseResponse struct {
	ForceCloseResponse *ForceCloseResponseMsg `protobuf:"bytes,7,opt,name=force_close_response,json=forceCloseResponse,proto3,oneof"`
}

type Message_DisputeNotification struct {
	DisputeNotification *DisputeNotification `protobuf:"bytes,8,opt,name=dispute_notification,json=disputeNotification,proto3,oneof"`
}

func (*Message_FundingRequest) isMessage_Msg() {}

func (*Message_FundingResponse) isMessage_Msg() {}

func (*Message_WatchRequest) isMessage_Msg() {}

func (*Message_WatchUpdate) isMessage_Msg() {}

func (*Message_WatchResponse) isMessage_Msg() {}

func (*Message_ForceCloseRequest) isMessage_Msg() {}

func (*Message_ForceCloseResponse) isMessage_Msg() {}

func (*Message_DisputeNotification) isMessage_Msg() {}

type FundingRequestMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Participant      uint32             `protobuf:"varint,1,opt,name=participant,proto3" json:"participant,omitempty"`
	Params           *protobuf.Params   `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	InitialState     *protobuf.State    `protobuf:"bytes,3,opt,name=initial_state,json=initialState,proto3" json:"initial_state,omitempty"`
	FundingAgreement *protobuf.Balances `protobuf:"bytes,4,opt,name=funding_agreement,json=fundingAgreement,proto3" json:"funding_agreement,omitempty"`
}

func (x *FundingRequestMsg) Reset() {
	*x = FundingRequestMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_perun_remote_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FundingRequestMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundingRequestMsg) ProtoMessage() {}

func (x *FundingRequestMsg) ProtoReflect() protoreflect.Message {
	mi := &file_perun_remote_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundingRequestMsg.ProtoReflect.Descriptor instead.
func (*FundingRequestMsg) Descriptor() ([]byte, []int) {
	return file_perun_remote_proto_rawDescGZIP(), []int{1}
}

func (x *FundingRequestMsg) GetParticipant() uint32 {
	if x != nil {
		return x.Participant
	}
	return 0
}

func (x *FundingRequestMsg) GetParams() *protobuf.Params {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *FundingRequestMsg) GetInitialState() *protobuf.State {
	if x != nil {
		return x.InitialState
	}
	return nil
}

func (x *FundingRequestMsg) GetFundingAgreement() *protobuf.Balances {
	if x != nil {
		return x.FundingAgreement
	}
	return nil
}

type FundingResponseMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId []byte `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Success   bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *FundingResponseMsg) Reset() {
	*x = FundingResponseMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_perun_remote_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FundingResponseMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundingResponseMsg) ProtoMessage() {}

func (x *FundingResponseMsg) ProtoReflect() protoreflect.Message {
	mi := &file_perun_remote_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundingResponseMsg.ProtoReflect.Descriptor instead.
func (*FundingResponseMsg) Descriptor() ([]byte, []int) {
	return file_perun_remote_proto_rawDescGZIP(), []int{2}
}

func (x *FundingResponseMsg) GetChannelId() []byte {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

func (x *FundingResponseMsg) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type WatchRequestMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Participant uint32                `protobuf:"varint,1,opt,name=participant,proto3" json:"participant,omitempty"`
	State       *protobuf.SignedState `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *WatchRequestMsg) Reset() {
	*x = WatchRequestMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_perun_remote_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchRequestMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchRequestMsg) ProtoMessage() {}

func (x *WatchRequestMsg) ProtoReflect() protoreflect.Message {
	mi := &file_perun_remote_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchRequestMsg.ProtoReflect.Descriptor instead.
func (*WatchRequestMsg) Descriptor() ([]byte, []int) {
	return file_perun_remote_proto_rawDescGZIP(), []int{3}
}

func (x *WatchRequestMsg) GetParticipant() uint32 {
	if x != nil {
		return x.Participant
	}
	return 0
}

func (x *WatchRequestMsg) GetState() *protobuf.SignedState {
	if x != nil {
		return x.State
	}
	return nil
}

type WatchUpdateMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitialState *protobuf.State `protobuf:"bytes,1,opt,name=initial_state,json=initialState,proto3" json:"initial_state,omitempty"`
	Sigs         [][]byte        `protobuf:"bytes,2,rep,name=sigs,proto3" json:"sigs,omitempty"`
}

func (x *WatchUpdateMsg) Reset() {
	*x = WatchUpdateMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_perun_remote_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchUpdateMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchUpdateMsg) ProtoMessage() {}

func (x *WatchUpdateMsg) ProtoReflect() protoreflect.Message {
	mi := &file_perun_remote_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchUpdateMsg.ProtoReflect.Descriptor instead.
func (*WatchUpdateMsg) Descriptor() ([]byte, []int) {
	return file_perun_remote_proto_rawDescGZIP(), []int{4}
}

func (x *WatchUpdateMsg) GetInitialState() *protobuf.State {
	if x != nil {
		return x.InitialState
	}
	return nil
}

func (x *WatchUpdateMsg) GetSigs() [][]byte {
	if x != nil {
		return x.Sigs
	}
	return nil
}

type WatchResponseMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId []byte `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Version   uint64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Success   bool   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *WatchResponseMsg) Reset() {
	*x = WatchResponseMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_perun_remote_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchResponseMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchResponseMsg) ProtoMessage() {}

func (x *WatchResponseMsg) ProtoReflect() protoreflect.Message {
	mi := &file_perun_remote_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchResponseMsg.ProtoReflect.Descriptor instead.
func (*WatchResponseMsg) Descriptor() ([]byte, []int) {
	return file_perun_remote_proto_rawDescGZIP(), []int{5}
}

func (x *WatchResponseMsg) GetChannelId() []byte {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

func (x *WatchResponseMsg) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *WatchResponseMsg) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ForceCloseRequestMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId []byte `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// Implicitly optional (messages have explicit presence). I'd love to mark
	// it explicitly as optional to indicate that it is intentionally optional,
	// but that requires protoc version 3.15 which the CI does not have (version
	// on Ubuntu: 3.12.4). We could either enable the experimental flag or
	// remove the optional flag. Since the flag doesn't make a real difference
	// here due to the "message" type, I've removed it.
	Latest *WatchUpdateMsg `protobuf:"bytes,2,opt,name=latest,proto3" json:"latest,omitempty"`
}

func (x *ForceCloseRequestMsg) Reset() {
	*x = ForceCloseRequestMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_perun_remote_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForceCloseRequestMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceCloseRequestMsg) ProtoMessage() {}

func (x *ForceCloseRequestMsg) ProtoReflect() protoreflect.Message {
	mi := &file_perun_remote_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceCloseRequestMsg.ProtoReflect.Descriptor instead.
func (*ForceCloseRequestMsg) Descriptor() ([]byte, []int) {
	return file_perun_remote_proto_rawDescGZIP(), []int{6}
}

func (x *ForceCloseRequestMsg) GetChannelId() []byte {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

func (x *ForceCloseRequestMsg) GetLatest() *WatchUpdateMsg {
	if x != nil {
		return x.Latest
	}
	return nil
}

type ForceCloseResponseMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId []byte `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Success   bool   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ForceCloseResponseMsg) Reset() {
	*x = ForceCloseResponseMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_perun_remote_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForceCloseResponseMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceCloseResponseMsg) ProtoMessage() {}

func (x *ForceCloseResponseMsg) ProtoReflect() protoreflect.Message {
	mi := &file_perun_remote_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceCloseResponseMsg.ProtoReflect.Descriptor instead.
func (*ForceCloseResponseMsg) Descriptor() ([]byte, []int) {
	return file_perun_remote_proto_rawDescGZIP(), []int{7}
}

func (x *ForceCloseResponseMsg) GetChannelId() []byte {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

func (x *ForceCloseResponseMsg) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DisputeNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId []byte `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *DisputeNotification) Reset() {
	*x = DisputeNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_perun_remote_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisputeNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisputeNotification) ProtoMessage() {}

func (x *DisputeNotification) ProtoReflect() protoreflect.Message {
	mi := &file_perun_remote_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisputeNotification.ProtoReflect.Descriptor instead.
func (*DisputeNotification) Descriptor() ([]byte, []int) {
	return file_perun_remote_proto_rawDescGZIP(), []int{8}
}

func (x *DisputeNotification) GetChannelId() []byte {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

var File_perun_remote_proto protoreflect.FileDescriptor

var file_perun_remote_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x65, 0x72, 0x75, 0x6e, 0x2d, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x65, 0x72, 0x75, 0x6e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x1a, 0x0a, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfc, 0x04,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x49, 0x0a, 0x0f, 0x66, 0x75, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x65, 0x72, 0x75, 0x6e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x2e, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x73, 0x67, 0x48, 0x00, 0x52, 0x0e, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x10, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x70, 0x65, 0x72, 0x75, 0x6e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x46, 0x75, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x48,
	0x00, 0x52, 0x0f, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x65, 0x72, 0x75,
	0x6e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x48, 0x00, 0x52, 0x0c, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x70, 0x65, 0x72, 0x75, 0x6e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a, 0x0e, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x65, 0x72, 0x75, 0x6e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x73, 0x67,
	0x48, 0x00, 0x52, 0x0d, 0x77, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x53, 0x0a, 0x13, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x70, 0x65, 0x72, 0x75, 0x6e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x46, 0x6f, 0x72,
	0x63, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x73,
	0x67, 0x48, 0x00, 0x52, 0x11, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x14, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x65, 0x72, 0x75, 0x6e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x48, 0x00, 0x52, 0x12, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55,
	0x0a, 0x14, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70,
	0x65, 0x72, 0x75, 0x6e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x75,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x13, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xd9, 0x01, 0x0a,
	0x11, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x73, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x65, 0x72, 0x75, 0x6e, 0x77, 0x69, 0x72, 0x65,
	0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x35, 0x0a, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x65, 0x72, 0x75, 0x6e, 0x77, 0x69,
	0x72, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x11, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x65, 0x72, 0x75, 0x6e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x10, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41,
	0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x4d, 0x0a, 0x12, 0x46, 0x75, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x61, 0x0a, 0x0f, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x65,
	0x72, 0x75, 0x6e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x5b, 0x0a, 0x0e, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x35, 0x0a, 0x0d,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x65, 0x72, 0x75, 0x6e, 0x77, 0x69, 0x72, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x04, 0x73, 0x69, 0x67, 0x73, 0x22, 0x65, 0x0a, 0x10, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x6a,
	0x0a, 0x14, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x06, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x65, 0x72, 0x75, 0x6e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x73, 0x67, 0x52, 0x06, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x15, 0x46, 0x6f,
	0x72, 0x63, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x34, 0x0a, 0x13,
	0x44, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_perun_remote_proto_rawDescOnce sync.Once
	file_perun_remote_proto_rawDescData = file_perun_remote_proto_rawDesc
)

func file_perun_remote_proto_rawDescGZIP() []byte {
	file_perun_remote_proto_rawDescOnce.Do(func() {
		file_perun_remote_proto_rawDescData = protoimpl.X.CompressGZIP(file_perun_remote_proto_rawDescData)
	})
	return file_perun_remote_proto_rawDescData
}

var file_perun_remote_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_perun_remote_proto_goTypes = []interface{}{
	(*Message)(nil),               // 0: perunremote.Message
	(*FundingRequestMsg)(nil),     // 1: perunremote.FundingRequestMsg
	(*FundingResponseMsg)(nil),    // 2: perunremote.FundingResponseMsg
	(*WatchRequestMsg)(nil),       // 3: perunremote.WatchRequestMsg
	(*WatchUpdateMsg)(nil),        // 4: perunremote.WatchUpdateMsg
	(*WatchResponseMsg)(nil),      // 5: perunremote.WatchResponseMsg
	(*ForceCloseRequestMsg)(nil),  // 6: perunremote.ForceCloseRequestMsg
	(*ForceCloseResponseMsg)(nil), // 7: perunremote.ForceCloseResponseMsg
	(*DisputeNotification)(nil),   // 8: perunremote.DisputeNotification
	(*protobuf.Params)(nil),       // 9: perunwire.Params
	(*protobuf.State)(nil),        // 10: perunwire.State
	(*protobuf.Balances)(nil),     // 11: perunwire.Balances
	(*protobuf.SignedState)(nil),  // 12: perunwire.SignedState
}
var file_perun_remote_proto_depIdxs = []int32{
	1,  // 0: perunremote.Message.funding_request:type_name -> perunremote.FundingRequestMsg
	2,  // 1: perunremote.Message.funding_response:type_name -> perunremote.FundingResponseMsg
	3,  // 2: perunremote.Message.watch_request:type_name -> perunremote.WatchRequestMsg
	4,  // 3: perunremote.Message.watch_update:type_name -> perunremote.WatchUpdateMsg
	5,  // 4: perunremote.Message.watch_response:type_name -> perunremote.WatchResponseMsg
	6,  // 5: perunremote.Message.force_close_request:type_name -> perunremote.ForceCloseRequestMsg
	7,  // 6: perunremote.Message.force_close_response:type_name -> perunremote.ForceCloseResponseMsg
	8,  // 7: perunremote.Message.dispute_notification:type_name -> perunremote.DisputeNotification
	9,  // 8: perunremote.FundingRequestMsg.params:type_name -> perunwire.Params
	10, // 9: perunremote.FundingRequestMsg.initial_state:type_name -> perunwire.State
	11, // 10: perunremote.FundingRequestMsg.funding_agreement:type_name -> perunwire.Balances
	12, // 11: perunremote.WatchRequestMsg.state:type_name -> perunwire.SignedState
	10, // 12: perunremote.WatchUpdateMsg.initial_state:type_name -> perunwire.State
	4,  // 13: perunremote.ForceCloseRequestMsg.latest:type_name -> perunremote.WatchUpdateMsg
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_perun_remote_proto_init() }
func file_perun_remote_proto_init() {
	if File_perun_remote_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_perun_remote_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_perun_remote_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FundingRequestMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_perun_remote_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FundingResponseMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_perun_remote_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchRequestMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_perun_remote_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchUpdateMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_perun_remote_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchResponseMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_perun_remote_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForceCloseRequestMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_perun_remote_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForceCloseResponseMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_perun_remote_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisputeNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_perun_remote_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Message_FundingRequest)(nil),
		(*Message_FundingResponse)(nil),
		(*Message_WatchRequest)(nil),
		(*Message_WatchUpdate)(nil),
		(*Message_WatchResponse)(nil),
		(*Message_ForceCloseRequest)(nil),
		(*Message_ForceCloseResponse)(nil),
		(*Message_DisputeNotification)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_perun_remote_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_perun_remote_proto_goTypes,
		DependencyIndexes: file_perun_remote_proto_depIdxs,
		MessageInfos:      file_perun_remote_proto_msgTypes,
	}.Build()
	File_perun_remote_proto = out.File
	file_perun_remote_proto_rawDesc = nil
	file_perun_remote_proto_goTypes = nil
	file_perun_remote_proto_depIdxs = nil
}
